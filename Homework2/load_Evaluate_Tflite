def load_and_evaluation(path, dataset):
    interpreter = tf.lite.Interpreter(model_path = path) 
    interpreter.allocate_tensors()
    input_details = interpreter.get_input_details()
    output_details = interpreter.get_output_details()

    dataset = test_ds.unbatch().batch(1)
    COMMANDS = ['stop', 'up', 'yes', 'right', 'left', 'no',  'down', 'go']
    outputs = []
    labels = []
    count = 0
    total = 0

    for inp , label in dataset:
        my_input = np.array(inp, dtype = np.float32)
        label = np.array(label, dtype = np.float32)
    
         
        labels.append(label)

        interpreter.set_tensor(input_details[0]['index'], my_input)
        interpreter.invoke()
        my_output = interpreter.get_tensor(output_details[0]['index'])
        predict = np.argmax(my_output)
        outputs.append(predict)
        total += 1   
        if (predict == label):
            count += 1
    # Compute the Accuracy         
    accuracy = count/total 
    print ("*"*50,"\n",f"The accuracy of TF lite model is = {accuracy *100 :0.2f} " )


    return accuracy 

